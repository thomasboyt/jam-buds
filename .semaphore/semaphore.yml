version: v1.0
name: Tests
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804

promotions:
  - name: Deploy
    pipeline_file: deploy.yml

blocks:
  - name: "Install dependencies"
    task:
      prologue:
        commands:
          - checkout
          - sem-version node 12
      jobs:
      - name: "API: npm install"
        commands:
          - cd api
          - cache restore node-modules-api-$SEMAPHORE_GIT_BRANCH-$(checksum package-lock.json),node-modules-api-$SEMAPHORE_GIT_BRANCH,node-modules-api-master
          - npm install
          - cache store node-modules-api-$SEMAPHORE_GIT_BRANCH-$(checksum package-lock.json) node_modules
      - name: "App: npm install"
        commands:
          - cd app
          - cache restore node-modules-app-$SEMAPHORE_GIT_BRANCH-$(checksum package-lock.json),node-modules-app-$SEMAPHORE_GIT_BRANCH,node-modules-app-master
          - npm install
          - cache store node-modules-app-$SEMAPHORE_GIT_BRANCH-$(checksum package-lock.json) node_modules
      - name: "Neo: npm install"
        commands:
          - cd neo
          - cache restore node-modules-neo-$SEMAPHORE_GIT_BRANCH-$(checksum package-lock.json),node-modules-neo-$SEMAPHORE_GIT_BRANCH,node-modules-neo-master
          - npm install
          - cache store node-modules-neo-$SEMAPHORE_GIT_BRANCH-$(checksum package-lock.json) node_modules

  - name: "Unit Tests"
    task:
      env_vars:
        - name: NODE_ENV
          value: "test"
        - name: DATABASE_URL
          value: "postgres://postgres@localhost:5432/jambuds_test"
        - name: REDIS_URL
          value: "redis://localhost:6379"
      prologue:
        commands:
          - checkout
          - sem-version node 12
          - sem-service start postgres
          - sem-service start redis
      jobs:
        - name: "API: Unit Tests"
          commands:
            - cd api
            - cache restore node-modules-api-$SEMAPHORE_GIT_BRANCH-$(checksum package-lock.json)
            - npm test
        - name: "Neo: Unit Tests"
          commands:
            - createdb -U postgres -h 0.0.0.0 jambuds_test
            # TODO: Do not require Knex to migrate
            - cd api
            - cache restore node-modules-api-$SEMAPHORE_GIT_BRANCH-$(checksum package-lock.json)
            - npx knex migrate:latest
            - cd ../neo
            - cache restore node-modules-neo-$SEMAPHORE_GIT_BRANCH-$(checksum package-lock.json)
            - npm test

  - name: "Integration Tests"
    task:
      secrets:
        - name: jambuds-integration-keys
      env_vars:
        - name: NODE_ENV
          value: "test"
        - name: TEST_ENV
          value: "feature"
        - name: DATABASE_URL
          value: "postgres://postgres@localhost:5432/jambuds_test"
        - name: REDIS_URL
          value: "redis://localhost:6379"
        - name: CI
          value: "1"
      prologue:
        commands:
          - checkout
          - sem-version node 12
          - cd api
          - cache restore node-modules-api-$SEMAPHORE_GIT_BRANCH-$(checksum package-lock.json)
          - cd ../app
          - cache restore node-modules-app-$SEMAPHORE_GIT_BRANCH-$(checksum package-lock.json)
          - cd ../neo
          - cache restore node-modules-neo-$SEMAPHORE_GIT_BRANCH-$(checksum package-lock.json)

          - cd ../spec
          - cache restore cypress-$(checksum package-lock.json)
          - npm ci
          - cache store cypress-$(checksum package-lock.json) ~/.cache/Cypress
          - npm install -g wait-on

          - sem-service start postgres
          - createdb -U postgres -h 0.0.0.0 jambuds_test
          - sem-service start redis
      jobs:
      - name: Integration Tests
        commands:
          - cd ../app
          - npm run build
          - npm start & wait-on -t 20000 http://localhost:8081
          - cd ../api
          - npm run e2e & wait-on -t 20000 tcp:3002
          - cd ../neo
          - npm run e2e & wait-on -t 20000 tcp:3003
          - cd ../spec
          - npm test -- --record